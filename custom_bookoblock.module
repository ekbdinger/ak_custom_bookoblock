<?php
/**
 * @file
 * Provides a single block that displays the current book's ToC when viewing a
 * menu item that is part of a book.
 */

/**
 * Implements hook_block_info().
 *
 * Define the Book Outline Block.
 */
function custom_bookoblock_block_info() {
  $block['book_outline'] = array(
    'info' => 'Book Outline',
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $block;
}

/**
 * Implements hook_block_view().
 *
 * Returns a block array with the current book's outline as the body and the top
 * level book as the title if the menu item viewed is a node and is part of a
 * book. NULL if the current menu item is not part of a book heirarchy.
 */
function custom_bookoblock_block_view() {
  global $base_url;
  if ($book = custom_bookoblock_is_book_node()) {
    // menu_build_tree() doesn't accept zero for depth, so we convert that to
    // NULL and add 1 if it's not 0 to account for the first (skipped) level.
    $max_depth = variable_get('bookoblock_depth', NULL);
    $max_depth = ($max_depth == 0) ? NULL : ($max_depth + 1);
    // Vars and params for the menu_build_tree() function.
    $path = 'node/' . $book['bid'];
    $parent = menu_link_get_preferred($path, $book['menu_name']);
    $parameters = array(
      'min_depth' => $parent['depth'] + 1,
      'max_depth' => $max_depth,
    );
    $children = menu_build_tree($parent['menu_name'], $parameters);
    
    $book_name = (book_toc($book['bid'], $max_depth));
   
    // Build and return the $block array.
    $block['subject'] = l($book_name[$book['p1']], 'node/' . $book['bid']);
    $html = '';
    foreach ($book_name as $key => $value) {
      $mlid = custom_bookblock_query($key);
      $html .= '<a href="'.$base_url.'/node/'.$mlid.'">'.$value.'</a><br>';
    }
    
    $block['content'] = $html;
    //print_r($block['content']);exit();

    return $block;
  }
  // If the current node isn't part of a book, just return nothing.
  return NULL;
}

/**
 * Implements hook_block_configure().
 *
 * Returns configuration form with depth select list.
 */
function custom_bookoblock_block_configure() {
  $form['bookoblock_depth'] = array(
    '#type' => 'select',
    '#options' => drupal_map_assoc(array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)),
    '#title' => t('Book Outline Block Depth'),
    '#description' => t('Select the maximum depth of the Book Outline Block. Select "0" for no limit.'),
    '#default_value' => variable_get('bookoblock_depth', 0),
  );
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * Saves the depth value for the block.
 */
function custom_bookoblock_block_save($delta = '', $edit = array()) {
  variable_set('bookoblock_depth', $edit['bookoblock_depth']);
}

/**
 * Checks to see if current node is part of a book.
 *
 * @return array
 *   book portion of the node array if it is part of a book, FALSE if not.
 */
function custom_bookoblock_is_book_node() {
  $node = menu_get_object();
  if ($node && isset($node->book)) {
    return $node->book;
  }
  return FALSE;
}


/**
  * Queries the database to get the node ids for corresponding mlid.
  *
  * @return nid  
  */
function custom_bookblock_query ($mlid) {
  $select = db_select('book', 'b')
    ->fields('b', array('nid'))
    ->condition('b.mlid', $mlid);
    $mlid = $select->execute()->fetchField();
    return $mlid;
}
